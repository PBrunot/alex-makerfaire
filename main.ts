scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile0`, function (sprite, location) {
    tiles.setCurrentTilemap(tilemap`level5`)
    mySprite = sprites.create(img`
        . . . . . . f f f f . . . . . . 
        . . . . f f f 2 2 f f f . . . . 
        . . . f f f 2 2 2 2 f f f . . . 
        . . f f f e e e e e e f f f . . 
        . . f e e 2 2 2 2 2 2 e f f . . 
        . f f e 2 f f f f f f 2 e f f . 
        . f f f f f e e e e f f f f f . 
        . . f e f b f 4 4 f b f e f . . 
        . . f e 4 1 f d d f 1 4 e f . . 
        . . e f f f f d d d 4 e f . . . 
        . . f d d d d f 2 2 2 f e f . . 
        . . f b b b b f 2 2 2 f 4 e . . 
        . . f b b b b f 2 2 2 f . . . . 
        . . . f c c f 5 5 4 4 f . . . . 
        . . . . f f f f f f f f . . . . 
        . . . . f f . . . f f f . . . . 
        `, SpriteKind.Player)
    controller.moveSprite(mySprite)
    // spriteutils.moveTo(mySprite, spriteutils.pos(32 * 16, 32 * 16), 100, true)
    scene.cameraFollowSprite(mySprite)
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    projectile = sprites.createProjectileFromSprite(img`
        . . . . . . . . . . . . 1 b . . 
        . . . . . . . . . . . . 1 b . . 
        . . . . . . . . . . . . . b . . 
        . . . . . . . . . . . . 1 b . . 
        . . . . . . . . . . . . . b . . 
        . . . . . . . . . . . . 1 b . . 
        . . . . . . . . . . . . b . . . 
        . . . . . . . . . . 1 . b . . . 
        . . . . . . . . . . . b . . . . 
        . . . . . . . . . 1 b . . . . . 
        . . . . . . . . . b . . . . . . 
        . . . . . . . . b . . . . . . . 
        . . 1 . 1 . b b . . . . . . . . 
        b b b b b b 1 . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        . . . . . . . . . . . . . . . . 
        `, mySprite, 66, 0)
    pause(100)
    sprites.destroy(projectile)
    animation.runImageAnimation(
    mySprite,
    [img`
        ........................
        ....ffffff..............
        ..ffeeeef2f.............
        .ffeeeef222f............
        .feeeffeeeef...cc.......
        .ffffee2222ef.cdc.......
        .fe222ffffe2fcddc.......
        fffffffeeeffcddc........
        ffe44ebf44ecddc.........
        fee4d41fddecdc..........
        .feee4dddedccc..........
        ..ffee44e4dde...........
        ...f222244ee............
        ...f2222e2f.............
        ...f444455f.............
        ....ffffff..............
        .....fff................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        ........................
        .......fff..............
        ....fffff2f.............
        ..ffeeeee22ff...........
        .ffeeeeee222ff..........
        .feeeefffeeeef..........
        .fffffeee2222ef.........
        fffe222fffffe2f.........
        fffffffffeeefff.....cc..
        fefe44ebbf44eef...ccdc..
        .fee4d4bbfddef..ccddcc..
        ..feee4dddddfeecdddc....
        ...f2222222eeddcdcc.....
        ...f444445e44ddccc......
        ...ffffffffeeee.........
        ...fff...ff.............
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        .......ff...............
        ....ffff2ff.............
        ..ffeeeef2ff............
        .ffeeeeef22ff...........
        .feeeeffeeeef...........
        .fffffee2222ef..........
        fffe222ffffe2f..........
        ffffffffeeefff..........
        fefe44ebf44eef..........
        .fee4d4bfddef...........
        ..feee4dddee.c..........
        ...f2222eeddeccccccc....
        ...f444e44ddecddddd.....
        ...fffffeeee.ccccc......
        ..ffffffff...c..........
        ..fff..ff...............
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        ....ffffff..............
        ..ffeeeef2f.............
        .ffeeeef222f............
        .feeeffeeeef............
        .ffffee2222ef...........
        .fe222ffffe2f...........
        fffffffeeefff...........
        ffe44ebf44eef...........
        fee4d41fddef............
        .feee4ddddf.............
        ..fdde444ef.............
        ..fdde22ccc.............
        ...eef22cdc.............
        ...f4444cddc............
        ....fffffcddc...........
        .....fff..cddc..........
        ...........cdc..........
        ............cc..........
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `,img`
        ......ffff..............
        ....fff22fff............
        ...fff2222fff...........
        ..fffeeeeeefff..........
        ..ffe222222eef..........
        ..fe2ffffff2ef..........
        ..ffffeeeeffff..........
        .ffefbf44fbfeff.........
        .fee41fddf14eef.........
        ..ffffdddddeef..........
        .fddddf444eef...........
        .fbbbbf2222f4e..........
        .fbbbbf2222fd4..........
        ..fccf45544f44..........
        ...ffffffff.............
        .....ff..ff.............
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        ........................
        `],
    100,
    false
    )
    pause(500)
})
function closeinventory () {
    Inventarioaperto = false
    controller.moveSprite(mySprite)
}
controller.left.onEvent(ControllerButtonEvent.Pressed, function () {
    selectedIndex = Math.max(selectedIndex - 1, 0)
})
function openinventory () {
    Inventarioaperto = true
    controller.moveSprite(mySprite, 0, 0)
    selectedIndex = 0
}
controller.right.onEvent(ControllerButtonEvent.Pressed, function () {
    selectedIndex = Math.min(selectedIndex + 1, Tools.length - 1)
})
scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile2`, function (sprite, location) {
    tiles.setCurrentTilemap(tilemap`level5`)
})
controller.menu.onEvent(ControllerButtonEvent.Pressed, function () {
    if (Inventarioaperto) {
        closeinventory()
    } else {
        openinventory()
    }
})
spriteutils.createRenderable(100, function (screen2) {
    if (Inventarioaperto) {
        screen2.fillRect(10, 10, 140, 100, 4)
        screen2.drawRect(10, 10, 140, 100, 14)
        screen2.print("INVENTARIO", 14, 14, 15)
screen2.print(Tools_names[selectedIndex], 80, 14, 0)
screen2.fillRect(14, 24, 132, 1, 15)
        tool_top = 28
        for (let index = 0; index <= Tools.length - 1; index++) {
            spriteutils.drawTransparentImage(Tools[index], screen2, 14 + index * 20, tool_top)
        }
        spriteutils.drawTransparentImage(img`
            11.11.11.11.11.11.11
            1...................
            ...................1
            1..................1
            1...................
            ...................1
            1..................1
            1...................
            ...................1
            1..................1
            1...................
            ...................1
            1..................1
            1...................
            ...................1
            1..................1
            1...................
            ...................1
            1..................1
            1.11.11.11.11.11.11.
            `, screen2, 14 + selectedIndex * 20 - 2, tool_top - 2)
    }
})
scene.onOverlapTile(SpriteKind.Player, assets.tile`myTile10`, function (sprite, location) {
    tiles.setCurrentTilemap(tilemap`level5`)
})
scene.onOverlapTile(SpriteKind.Player, sprites.dungeon.collectibleInsignia, function (sprite, location) {
    tiles.setCurrentTilemap(tilemap`level5`)
})
let Inventarioaperto = false
let projectile: Sprite = null
let mySprite: Sprite = null
let tool_top = 0
let selectedIndex = 0
let Tools: Image[] = []
let sword2 = img`
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . b c 
    . . . . . . . . . . . . . b e . 
    . . . . . . . . . d d . b e . . 
    . . . . . . . . . . d b b . . . 
    . . . . . . . . . . d b b . . . 
    . . . . . . . . . d b b . b . . 
    . . . . . . . . d e b . . b . . 
    . . . . . . . d e b . . . . . . 
    . . . . . . d e b . . . . . . . 
    . . . . . d e b . . . . . . . . 
    . . . . d e b . . . . . . . . . 
    . . . d e b . . . . . . . . . . 
    . . d e b . . . . . . . . . . . 
    . d b b . . . . . . . . . . . . 
    . d d . . . . . . . . . . . . . 
    `
mySprite = sprites.create(img`
    . . . . . . f f f f . . . . . . 
    . . . . f f f 2 2 f f f . . . . 
    . . . f f f 2 2 2 2 f f f . . . 
    . . f f f e e e e e e f f f . . 
    . . f e e 2 2 2 2 2 2 e f f . . 
    . f f e 2 f f f f f f 2 e f f . 
    . f f f f f e e e e f f f f f . 
    . . f e f b f 4 4 f b f e f . . 
    . . f e 4 1 f d d f 1 4 e f . . 
    . . e f f f f d d d 4 e f . . . 
    . . f d d d d f 2 2 2 f e f . . 
    . . f b b b b f 2 2 2 f 4 e . . 
    . . f b b b b f 2 2 2 f . . . . 
    . . . f c c f 5 5 4 4 f . . . . 
    . . . . f f f f f f f f . . . . 
    . . . . f f . . . f f f . . . . 
    `, SpriteKind.Player)
tiles.setCurrentTilemap(tilemap`level2`)
mySprite.x = 32 * 16
mySprite.y = 32 * 16
// spriteutils.moveTo(mySprite, spriteutils.pos(32 * 16, 32 * 16), 100, true)
scene.cameraFollowSprite(mySprite)
info.setLife(10)
Tools = [
img`
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . b c 
    . . . . . . . . . . . . . b e . 
    . . . . . . . . . d d . b e . . 
    . . . . . . . . . . d b b . . . 
    . . . . . . . . . . d b b . . . 
    . . . . . . . . . d e b . b . . 
    . . . . . . . . d e b . . b . . 
    . . . . . . . d e b . . . . . . 
    . . . . . . d e b . . . . . . . 
    . . . . . d e b . . . . . . . . 
    . . . . d e b . . . . . . . . . 
    . . . d e b . . . . . . . . . . 
    . . d e b . . . . . . . . . . . 
    . d b b . . . . . . . . . . . . 
    . d d . . . . . . . . . . . . . 
    `,
assets.image`Scudo fab`,
img`
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    `,
img`
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    `,
img`
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    . . . . . . . . . . . . . . . . 
    `
]
let Tools_names = [
"Spada",
"Scudo Fab",
"",
"",
""
]
controller.moveSprite(mySprite)
